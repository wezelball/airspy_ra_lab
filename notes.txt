NOTES

USAGE

airspy_rx v1.0.3 3 Dec 2015
Usage:
-r <filename>: Receive data into file
-w Receive data into file with WAV header and automatic name
 This is for SDR# compatibility and may not work with other software
[-s serial_number_64bits]: Open device with specified 64bits serial number
[-p packing]: Set packing for samples, 
 1=enabled(12bits packed), 0=disabled(default 16bits not packed)
[-f frequency_MHz]: Set frequency in MHz between [24, 1900] (default 900MHz)
[-a sample_rate]: Set sample rate
[-t sample_type]: Set sample type, 
 0=FLOAT32_IQ, 1=FLOAT32_REAL, 2=INT16_IQ(default), 3=INT16_REAL, 4=U16_REAL
[-b biast]: Set Bias Tee, 1=enabled, 0=disabled(default)
[-v vga_gain]: Set VGA/IF gain, 0-15 (default 5)
[-m mixer_gain]: Set Mixer gain, 0-15 (default 5)
[-l lna_gain]: Set LNA gain, 0-14 (default 1)
[-g linearity_gain]: Set linearity simplified gain, 0-21
[-h sensivity_gain]: Set sensitivity simplified gain, 0-21
[-n num_samples]: Number of samples to transfer (default is unlimited)
[-d]: Verbose mode


TYPICAL COMMAND LINE

./airspy_rx_lab -r testairspy -f 100.0 -t 1 -n 10000000  -d
./airspy_rx_lab -r testairspy -f 100.0 -t 1 -n 10000000  -a 1 -d

-a 0 is 20 million samples per second (real) 
-a 1 is 5 million samples per second (real)

PLOTTING FROM GNUPLOT (current data format and endianness not verified)

plot 'testairspy' binary format='%float32' endian=little using 1 with lines

I'm not sure of the results I am getting with gnuplot, but grc seems
to understand the output


3/6/16

I need to know exactly what one windows worth of data is, and is there
a data structure in the program that holds that information?

3/11/16
Installed Baudline and did a cool experiment with streaming from airspy,
using following commands:

$ mkfifo /tmp/sdrfifo
$ cat /tmp/sdrfifo | ./baudline -reset -samplerate 2500000 -channel 2 -format le16 -quadrature -stdin &
$ airspy_rx -a 1 -f 100.0 -t 2 -r /tmp/sdrfifo

I was also able to open the testairspy file using the following parameters:

File format: raw
Decompression: auto magic
Initial byte offset: 0
Sample rate: custom 20000000
Channels: 1
Decode format: 32 bit float
Endian: little
Normalization: auto measure

3/17/16

Start working with IO data
airspy_rx -f 100.0 -a 0 -t 2 -n 10000000 -d -r testairspy

THIS WORKED!

GnuRadio properly read file with correct frequency information when 
the INT16_IQ (IShort in gnuradio) was used.  I got a 100.5 MHz 
FFT peak for the evil radio station - first time for that!

Using IQ data is the proper way to go - now I need to get python and 
matplotlib to read it.

Rational resampler also works properly.
